TODO.txt

:: Feb 2021 ::
	- basic runtime for text adventure!
	- break while / continue while
	- basic types (int, float, string)
	- array type
		- array of basic type
	- type definitions (struct)


:: Jan pt2 2021 ::
	- multiple input files  X
	- dim assignment race condition  X
	- assign to array accessor  X
	- while loop  X
	- comparison operators in expression  X
	- if statement  X
		- else if / else  X
	- return statement (int)  X
	- and / or in expression  X
		- use '&&' or 'and'?  X


:: Jan 2021 ::
	- add system headers for inbuilt functions  X
		- added system keyword  X
		- implement malloc, free, realloc  X
		- implement ioredirect()  X
	- add input keyword  X
		- input a  # results go into memory malloc'd to a
		- input "prompt: ", a  # as above with user defined prompt (string literal)
	- hello world, and hello <user> program!  X
	- modify print command to print strings ($), numbers(%, default), raw/char(?? @)
	- add consts, global consts, system consts (or #define alternative)


:: Dec 2020 ::
	- function arguments  X
		- arg duplicate check  X
		- inner define and redefine check  X
			- use inner definition  X
	- function call arguments  X
		- arguments syntax  X
		- arg count check  X
	- function calls in expressions (default return int)  X
	- array decs too complicated for the moment. replace with pointers!
		- remove  X
	- array accessors in expressions  X
	- thoughts:
		- add pointer decs + malloc (?)
			- DIM ptr[] = malloc(100)
			- free(ptr)
			- a + b[0]
			- (probably requires type checking at some later stage)

		- possibly add DATA keyword? WIP - work on this syntax
			- DIM d1[] ( = malloc(0) ??? )
			- malloc d1, 100
			- DATA d1 10, 5, 100, 1000  // overwrites d1
			- DATA d2 "hello world"
			- arrcat(p1, d2)
			- dump (?) d1 "hello world", 1, 1*2  // same syntax as print, but for arrays?
